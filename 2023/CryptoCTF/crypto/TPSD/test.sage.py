

# This file was *autogenerated* from the file /Users/zukash/ghq/github.com/zukash/ctf-problems/CryptoCTF2023/crypto/TPSD/test.sage
from sage.all_cmdline import *   # import sage library

_sage_const_3 = Integer(3); _sage_const_1 = Integer(1); _sage_const_0 = Integer(0)
from itertools import count

# r = -r で置き換えて
# p**3 + q**3 == r**3 + 1
l = _sage_const_3 

p = next_prime(_sage_const_1  << l)
while True:
    print(p)
    for d in divisors(p ** _sage_const_3  + _sage_const_1 ):
        x = var("x")
        f = _sage_const_3  * x * x + _sage_const_3  * d * x + d * d
        q, r = f.roots()
        q, r = q[_sage_const_0 ], r[_sage_const_0 ]
        if q.is_integer() and r.is_integer():
            print(q, r)
    p = next_prime(p)

"""
73 144 150
1033 1738 1852
"""

