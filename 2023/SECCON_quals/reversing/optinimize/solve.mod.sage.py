

# This file was *autogenerated* from the file /Users/zukash/ghq/github.com/zukash/ctf-problems/SECCON_quals_2023/reversing/optinimize/solve.mod.sage
from sage.all_cmdline import *   # import sage library

_sage_const_0 = Integer(0); _sage_const_1 = Integer(1); _sage_const_2 = Integer(2); _sage_const_3 = Integer(3); _sage_const_10 = Integer(10); _sage_const_4 = Integer(4)
import tqdm


def solve(x):
    M = matrix(Zmod(x), [[_sage_const_0 , _sage_const_1 , _sage_const_1 ], [_sage_const_1 , _sage_const_0 , _sage_const_0 ], [_sage_const_0 , _sage_const_1 , _sage_const_0 ]])
    return (M ** x * vector([_sage_const_2 , _sage_const_0 , _sage_const_3 ])[-_sage_const_1 ]


Q = []
for x in tqdm.trange(_sage_const_10  ** _sage_const_4 ):
    Q.append(solve(x))

print(Q)
print([i for i, q in enumerate(Q) if q == _sage_const_0 ])

