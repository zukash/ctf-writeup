

# This file was *autogenerated* from the file problem.sage
from sage.all_cmdline import *   # import sage library

_sage_const_333 = Integer(333); _sage_const_2 = Integer(2); _sage_const_1 = Integer(1)
import os
import secrets
import signal

FLAG = os.getenv("FLAG", "FAKEFLAG{THIS_IS_FAKE}")


if __name__ == "__main__":
    signal.alarm(_sage_const_333 )
    p = int(input("What's your favorite 333-bit p: "))
    if not is_prime(p) or p.bit_length() != _sage_const_333 :
        print("Invalid p")
        exit()
    order = p**_sage_const_2  - _sage_const_1 
    x = secrets.randbelow(order)
    Q = QuaternionAlgebra(Zmod(p), -_sage_const_1 , -_sage_const_1 )
    g = Q.random_element()
    h = g**x
    print(f"{g = }")
    print(f"{h = }")
    _x = int(input("Guess x: "))
    if g**_x == h:
        print(FLAG)
    else:
        print("NO FLAG")

