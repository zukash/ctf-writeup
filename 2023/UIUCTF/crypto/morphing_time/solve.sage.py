

# This file was *autogenerated* from the file /Users/zukash/Documents/ctf/crypto/uiuctf_2023/morphing_time/solve.sage
from sage.all_cmdline import *   # import sage library

_sage_const_1337 = Integer(1337); _sage_const_1 = Integer(1)
from Crypto.Util.number import *
from pwn import *

io = remote("morphing.chal.uiuc.tf", int(_sage_const_1337 ))
print(io.recvline())
print(io.recvline())
print(io.recvline())

g = int(io.recvline().split(b"=")[-_sage_const_1 ])
p = int(io.recvline().split(b"=")[-_sage_const_1 ])
A = int(io.recvline().split(b"=")[-_sage_const_1 ])
print(g, p, A)

print(io.recvline())
c1 = int(io.recvline().split(b"=")[-_sage_const_1 ])
c2 = int(io.recvline().split(b"=")[-_sage_const_1 ])
print(c1, c2)

io.sendline(str(c1).encode())
io.sendline(str(c2).encode())

print()
io.recvuntil(b"m = ")
m2 = int(io.recvline())
print(m2)
print(long_to_bytes(m2))
print()

Z = Zmod(p)['x']; (x,) = Z._first_ngens(1)
f = x * x - m2
for m, _ in f.roots():
    print(m)
    print(long_to_bytes(int(m)))

io.interactive()


# # io.recvline(b"=")
# # p = int(io.recvline())

# # io.recvline(b"=")
# # A = int(io.recvline())

# # print(g, p, A)

