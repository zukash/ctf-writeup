# p = 17
p = 115792089237316195423570985008687907853269984665640564039457584007913129640233
n = 14
# shares = [6, 2, 5, 5, 1, 11, 12, 11, 1, 12, 11, 15, 10, 0]
shares = [
    68194659437231590099459189838625462140912468315141992535193582468676174745528,
    51696476628555883322868056709064652976844272832862388292897320689335728454049,
    113140377751647001040999477925361545395835830853922331090078204204669858615858,
    102419328371176730199830531971770127100679059506849853502129302698765107264867,
    75140751854412783118652284705918624893371252432939262586002186884724988935667,
    67196810994355474866029551449395639561659137042176899790184495155844564308747,
    10103871354400817063290203600996604673655825749300960031328817819629722926634,
    21362213186735628882184799770460065435138454649470407431481847981817249797938,
    10300023940291114532964783903940408576047049099601352416986916765856469561931,
    25363654443556270890430628266759800604604102814331191396078436928861947782831,
    91082233415925167998380447125227687786519081514499733148518271929539033528629,
    73891604217588153896091571236465479885031281588160739684936244733035511403193,
    48537626584690277824743845760199216473632241566705882328630633166670859124381,
]

M = []
for i in range(n):
    M.append([pow(i + 1, j, p) for j in range(n)])
# Z = Zmod(p)
Z = GF(p)
M = matrix(Z, M)
M = M[:-1]
M.augment(vector(shares))
print(M.echelon_form())

# P = [Z[f"p{j}"] for j in range(n - 1)]
# V = vector(Z, shares)

# E = []
# for i in range(n - 1):
#     l = sum(Z(M[i][j]) * P[j] for j in range(n - 1))
#     E.append(l == V[i])
# print(E)

# print(M.inverse() * V)
# print(M.inverse())
# print(next_prime(1 << (8 * 32)))

###############
# # 例として、3x3の行列を作成
# A = Matrix(Zmod(7), [[1, 2, 3], [4, 5, 6], [7, 8, 1]])

# # 行列Aを掃き出し法で変形
# print(A.echelon_form())
