from sage.all import PolynomialRing, GF
from ecpy import *

a, b = [
    0x1C456BFC3FABBA99A737D7FD127EAA9661F7F02E9EB2D461D7398474A93A9B87,
    0x8B429F4B9D14ED4307EE460E9F8764A1F276C7E5CE3581D8ACD4604C2F0EE7CA,
]
X, Y, Z = (
    92512155407887452984968972936950900353410451673762367867085553821839087925110135228608997461366439417183638759117086992178461481890351767070817400228450804002809798219652013051455151430702918340448295871270728679921874136061004110590203462981486702691470087300050508138714919065755980123700315785502323688135,
    40665795291239108277438242660729881407764141249763854498178188650200250986699,
    1,
)
QX, QY = (
    62273117814745802387117000953578316639782644586418639656941009579492165136792362926314161168383693280669749433205290570927417529976956408493670334719077164685977962663185902752153873035889882369556401683904738521640964604463617065151463577392262554355796294028620255379567953234291193792351243682705387292519,
    518657271161893478053627976020790808461429425062738029168194264539097572374157292255844047793806213041891824369181319495179810050875252985460348040004008666418463984493701257711442508837320224308307678689718667843629104002610613765672396802249706628141469710796919824573605503050908305685208558759526126341,
)


p = 0xD9D35163A870DC6DFB7F43911FF81C964DC8E1DD2481FDF6F0E653354B59C5E5

# P = 0xD3CEEC4C84AF8FA5F3E9AF91E00CABACAAAECEC3DA619400E29A25ABECECFDC9BD678E2708A58ACB1BD15370ACC39C596807DAB6229DCA11FD3A217510258D1B
# A = 0x95FC77EB3119991A0022168C83EEE7178E6C3EEAF75E0FDF1853B8EF4CB97A9058C271EE193B8B27938A07052F918C35ECCB027B0B168B4E2566B247B91DC07
# Gx = 0xCF634030986CF41C1ADD87E71D638B9CC723C764059CF4C9B8ED2A0AAF5D51DC770372503EBFAAD746AB9220E992C09822916978226465AD31D354A3EFEE51DA
# Gy = 0x65EAAD8848B2787103FCE02358B45D8A61420031989EB6B4B70D82FE20D85583AE542EB8F76749DC640B0F13F682228819B8B2F04BD7A5A17A4C675540FE1C90

_, b = PolynomialRing(GF(p**4), name="b").objgen()
f = X**3 + a * X + b - Y**2
B = int(f.roots()[0][0])

F = FiniteField(p**4)
EC = EllipticCurve(F, int(a), B)

G = EC(X, Y)
Q = EC(QX, QY)
s = SSSA_Attack(F, EC, G, Q)
print(s)
