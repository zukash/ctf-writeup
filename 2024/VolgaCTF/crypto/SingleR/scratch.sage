# ref. https://gitlab.com/n0tsobad/ctf-writeups/tree/master/2019-02-01-nullcon/Singular

"""
a1 = 0
a3 = 0

p_mod = (
    116360488056395870563055365435965488415153606823814815615564505122749038681516533
)
a2 = 7887616263821947558686653170941677360444444810256780630032698031345317313838358
a4 = 96797989774847387504509857489893926962575497188447191529471387551670316582140331
a6 = 90066192920604393834167274731419299471591066103539000277218756197714564706866218

ec = EllipticCurve(GF(p_mod), [a1, a2, a3, a4, a6])

P = Point(
    ec,
    42535791201977922181488571956592667532304947801293376812113182276087208310822786,
    71152331533310754530614680068197669082982426466348582120767993753731485293472031,
)
"""

from Crypto.Util.number import long_to_bytes

def SingularNode(a, b, c, p, G, Q):
    PR.<x> = GF(p)[]
    E = x^3 + a*x^2 + b*x + c
    roots = E.roots()
    dx = next(filter(lambda x: x[1] == 2, roots))[0]
    dy = 0

    E_ = E.subs(x = x + dx)
    roots = E_.roots()
    k = next(filter(lambda x: x[1] == 1, roots))[0]
    k = (-k).square_root()

    def f(P):
        if P == 0:
            return 1
        x, y = P[0], P[1]
        return (y + k * x) / (y - k * x)

    g = f((G[0] - dx, G[1] - dy))
    q = f((Q[0] - dx, Q[1] - dy))
    return discrete_log(q, g)

# # ArithmeticError: y^2 = x^3 + 7887616263821947558686653170941677360444444810256780630032698031345317313838358*x^2 + 96797989774847387504509857489893926962575497188447191529471387551670316582140331*x + 90066192920604393834167274731419299471591066103539000277218756197714564706866218 defines a singular curve

p = 116360488056395870563055365435965488415153606823814815615564505122749038681516533
a = 7887616263821947558686653170941677360444444810256780630032698031345317313838358
b = 96797989774847387504509857489893926962575497188447191529471387551670316582140331
c = 90066192920604393834167274731419299471591066103539000277218756197714564706866218

G = (
    42535791201977922181488571956592667532304947801293376812113182276087208310822786,
    71152331533310754530614680068197669082982426466348582120767993753731485293472031,
)
Q_0 = (
    6016295990300574344278044088650157268033372269165593730715334659071847686439115,
    114872518459651504374918054675117035811059205167061529988304866655649529483141640,
)
Q_1 = (
    38752270275366276555101938657904822713663891247932456649431894722998932761193834,
    61806602763875154428886676413215352472981635029703793443064864916795786286746299,
)
Q_2 = (
    55727594525070309861219574531477640507154429872337369357153611311109246140631189,
    35380926786299034258057113384595062678956537053121094844139142722870494276589712,
)

d0 = SingularNode(a, b, c, p, G, Q_0)
d1 = SingularNode(a, b, c, p, G, Q_1)
d2 = SingularNode(a, b, c, p, G, Q_2)

print(d0)
print(d1)
print(d2)

print(long_to_bytes(d0))
print(long_to_bytes(d1))
print(long_to_bytes(d2))


# d0 = 73815575442290007373302956231530367996768913502142275392756640346886516883921525
# d1 = 21030955486514945214177805198786043152180365123320610227517648815092382346302545
# d2 = 39468383457478180072136987462173900634328689315405153228092211919100478874437041

# p = 116360488056395870563055365435965488415153606823814815615564505122749038681516533
s = 25085393888659482977701357047091152715679483008474503880058442590903105188407008
s = GF(p)(s).square_root()

a = GF(p)(123) + s
b = a**10

print(a)
print(b)
print(discrete_log(b, a))

# VolgaCTF{0xf5c4eb5bc4ed2bc87aa516ede02ebea6}