from elliptic_curve import *
from secret import flag


if __name__ == "__main__":
    a1 = 0
    a3 = 0

    p_mod = 116360488056395870563055365435965488415153606823814815615564505122749038681516533
    a2 = 7887616263821947558686653170941677360444444810256780630032698031345317313838358
    a4 = (
        96797989774847387504509857489893926962575497188447191529471387551670316582140331
    )
    a6 = (
        90066192920604393834167274731419299471591066103539000277218756197714564706866218
    )

    ec = EllipticCurve([a1, a2, a3, a4, a6, p_mod])

    P = Point(
        ec,
        42535791201977922181488571956592667532304947801293376812113182276087208310822786,
        71152331533310754530614680068197669082982426466348582120767993753731485293472031,
    )

    # Encrypt flag
    size = 16  # bytes
    blocks = []

    for i in range(0, len(flag), size):
        blocks.append(flag[i : i + size])

    for i in range(len(blocks)):
        d = int.from_bytes(blocks[i], "big")
        print(f"Q_{i} =", d * P)
